{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F\\\\time\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Item from \"./Item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch(\"https://www.reddit.com/r/reactjs.json?limit=100\").then(response => response.json()).then(data => {\n      this.setState({\n        items: data.data.children,\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      items,\n      isLoading\n    } = this.state;\n    const itemsSortByComments = items.sort((a, b) => b.data.num_comments - a.data.num_comments);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Top commented\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        stile: {\n          marginBott\n        },\n        children: \"Stop auto-refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"...Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this) : items.map(item => /*#__PURE__*/_jsxDEV(Item, {\n        data: item.data\n      }, item.data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 27\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/задание время/time/src/App.js"],"names":["React","Item","App","Component","constructor","state","items","isLoading","componentDidMount","setState","fetch","then","response","json","data","children","render","itemsSortByComments","sort","a","b","num_comments","marginBott","map","item","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEC,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AACjCC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAX;AAID;;AACCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AACdF,MAAAA,SAAS,EAAE;AADG,KAAd;AAGAG,IAAAA,KAAK,CAAC,iDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ,WAAKL,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAEQ,IAAI,CAACA,IAAL,CAAUC,QADL;AAEdR,QAAAA,SAAS,EAAE;AAFG,OAAd;AAIC,KAPH;AAQD;;AACHS,EAAAA,MAAM,GAAG;AACP,UAAM;AAACV,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAqB,KAAKF,KAAhC;AACA,UAAMY,mBAAmB,GAAGX,KAAK,CAACY,IAAN,CAAW,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACN,IAAF,CAAOO,YAAP,GAAoBF,CAAC,CAACL,IAAF,CAAOO,YAA/C,CAA5B;AACA,wBACA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAG;AAACC,UAAAA;AAAD,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGf,SAAS,gBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ,GACRD,KAAK,CAACiB,GAAN,CAAUC,IAAI,iBAAI,QAAC,IAAD;AAA2B,QAAA,IAAI,EAAEA,IAAI,CAACV;AAAtC,SAAaU,IAAI,CAACV,IAAL,CAAUW,EAAvB;AAAA;AAAA;AAAA;AAAA,cAAlB,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AASC;;AAjC8B;;AAoCjC,eAAevB,GAAf","sourcesContent":["import React from \"react\";\nimport Item from \"./Item\"\n\n class App extends React.Component {\n  constructor(){\n    super()\n    this.state={\n      items: [],\n      isLoading: false\n    };\n  }\n    componentDidMount() {\n      this.setState({\n      isLoading: true \n      });\n      fetch(\"https://www.reddit.com/r/reactjs.json?limit=100\")\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          items: data.data.children,\n        isLoading: false\n        });\n        });\n    }\n  render() {\n    const {items, isLoading} = this.state;\n    const itemsSortByComments = items.sort((a,b) => b.data.num_comments-a.data.num_comments);\n    return (\n    <div>\n      <h1>Top commented</h1>\n      <button type=\"button\" stile ={{marginBott}}>Stop auto-refresh</button>\n      {isLoading ? (<p>...Loading</p>) : (\n        items.map(item => <Item key = {item.data.id} data={item.data}/>)\n    )}\n    </div>\n    );\n    }\n  }\n\n  export default App;"]},"metadata":{},"sourceType":"module"}