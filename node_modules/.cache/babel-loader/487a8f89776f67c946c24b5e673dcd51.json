{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F\\\\time\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Item from \"./Item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getItems = () => {\n      this.setState({\n        isLoading: true\n      });\n      fetch(\"https://www.reddit.com/r/reactjs.json?limit=100\").then(response => response.json()).then(data => {\n        this.setState({\n          items: data.data.children,\n          isLoading: false\n        });\n      });\n    };\n\n    this.updateAutoRefresh = () => {\n      this.au;\n    };\n\n    this.state = {\n      items: [],\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.getItems();\n  }\n\n  render() {\n    const {\n      items,\n      isLoading\n    } = this.state;\n    const itemsSortByComments = items.sort((a, b) => b.data.num_comments - a.data.num_comments);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Top commented\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        stile: {\n          marginBottom: \"15px\"\n        },\n        onClick: then.updateAutoRefresh,\n        children: \"Start auto-refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"...Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this) : items.map(item => /*#__PURE__*/_jsxDEV(Item, {\n        data: item.data\n      }, item.data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 27\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/задание время/time/src/App.js"],"names":["React","Item","App","Component","constructor","getItems","setState","isLoading","fetch","then","response","json","data","items","children","updateAutoRefresh","au","state","componentDidMount","render","itemsSortByComments","sort","a","b","num_comments","marginBottom","map","item","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEC,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AACjCC,EAAAA,WAAW,GAAE;AACX;;AADW,SAWXC,QAXW,GAWA,MAAM;AACd,WAAKC,QAAL,CAAc;AACfC,QAAAA,SAAS,EAAE;AADI,OAAd;AAGDC,MAAAA,KAAK,CAAC,iDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ,aAAKN,QAAL,CAAc;AACZO,UAAAA,KAAK,EAAED,IAAI,CAACA,IAAL,CAAUE,QADL;AAEdP,UAAAA,SAAS,EAAE;AAFG,SAAd;AAIC,OAPH;AAQD,KAvBU;;AAAA,SAyBXQ,iBAzBW,GAyBQ,MAAM;AAC7B,WAAKC,EAAL;AACK,KA3BU;;AAEX,SAAKC,KAAL,GAAW;AACTJ,MAAAA,KAAK,EAAE,EADE;AAETN,MAAAA,SAAS,EAAE;AAFF,KAAX;AAID;;AACCW,EAAAA,iBAAiB,GAAG;AACnB,SAAKb,QAAL;AACA;;AAoBHc,EAAAA,MAAM,GAAG;AACP,UAAM;AAACN,MAAAA,KAAD;AAAQN,MAAAA;AAAR,QAAqB,KAAKU,KAAhC;AACA,UAAMG,mBAAmB,GAAGP,KAAK,CAACQ,IAAN,CAAW,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACX,IAAF,CAAOY,YAAP,GAAoBF,CAAC,CAACV,IAAF,CAAOY,YAA/C,CAA5B;AACA,wBACA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAG;AAACC,UAAAA,YAAY,EAAE;AAAf,SAA9B;AACA,QAAA,OAAO,EAAEhB,IAAI,CAACM,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAMGR,SAAS,gBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ,GACRM,KAAK,CAACa,GAAN,CAAUC,IAAI,iBAAI,QAAC,IAAD;AAA2B,QAAA,IAAI,EAAEA,IAAI,CAACf;AAAtC,SAAae,IAAI,CAACf,IAAL,CAAUgB,EAAvB;AAAA;AAAA;AAAA;AAAA,cAAlB,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAYC;;AA7C8B;;AAgDjC,eAAe1B,GAAf","sourcesContent":["import React from \"react\";\nimport Item from \"./Item\"\n\n class App extends React.Component {\n  constructor(){\n    super()\n    this.state={\n      items: [],\n      isLoading: false\n    };\n  }\n    componentDidMount() {\n     this.getItems()\n    }\n\n    getItems = () => {\n       this.setState({\n      isLoading: true \n      });\n      fetch(\"https://www.reddit.com/r/reactjs.json?limit=100\")\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          items: data.data.children,\n        isLoading: false\n        });\n        });\n    };\n\n    updateAutoRefresh= () => {\nthis.au\n    }\n\n  render() {\n    const {items, isLoading} = this.state;\n    const itemsSortByComments = items.sort((a,b) => b.data.num_comments-a.data.num_comments);\n    return (\n    <div>\n      <h1>Top commented</h1>\n      <button type=\"button\" stile ={{marginBottom: \"15px\"}}\n      onClick={then.updateAutoRefresh}>\n        Start auto-refresh\n        </button>\n      {isLoading ? (<p>...Loading</p>) : (\n        items.map(item => <Item key = {item.data.id} data={item.data}/>)\n    )}\n    </div>\n    );\n    }\n  }\n\n  export default App;"]},"metadata":{},"sourceType":"module"}