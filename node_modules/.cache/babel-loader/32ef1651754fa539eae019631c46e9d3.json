{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F\\\\time\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Item from \"./Item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getItems = () => {\n      this.setState({\n        isLoading: true\n      });\n      fetch(\"https://www.reddit.com/r/reactjs.json?limit=100\").then(response => response.json()).then(data => {\n        this.setState({\n          items: data.data.children,\n          isLoading: false\n        });\n      });\n    };\n\n    this.updateAutoRefresh = () => {\n      this.setState(state => ({\n        enableAutoRefresh: !state.enableAutoRefresh\n      }), () => {\n        if (this.state.enableAutoRefresh) {\n          this.autoFresh = setInterval(this.getItems, 3000);\n        } else {\n          clearInterval(this.autoRefresh);\n        }\n      });\n    };\n\n    this.updateMinComments = event => this.setState({\n      updateMinComments: event.targe\n    });\n\n    this.state = {\n      items: [],\n      isLoading: false,\n      enableAutoRefresh: false,\n      minComments: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getItems();\n  }\n\n  render() {\n    const {\n      items,\n      isLoading,\n      enableAutoRefresh\n    } = this.state;\n    const itemsSortByComments = items.sort((a, b) => b.data.num_comments - a.data.num_comments);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Top commented\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          stile: {\n            marginBottom: \"15px\"\n          },\n          onClick: this.updateAutoRefresh,\n          children: [enableAutoRefresh ? \"Stop\" : \"Start\", \" auto-refresh\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        value: minComments,\n        onChange: this.updateMinComments,\n        min: 0,\n        max: 500,\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"...Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this) : items.map(item => /*#__PURE__*/_jsxDEV(Item, {\n        data: item.data\n      }, item.data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 27\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/задание время/time/src/App.js"],"names":["React","Item","App","Component","constructor","getItems","setState","isLoading","fetch","then","response","json","data","items","children","updateAutoRefresh","state","enableAutoRefresh","autoFresh","setInterval","clearInterval","autoRefresh","updateMinComments","event","targe","minComments","componentDidMount","render","itemsSortByComments","sort","a","b","num_comments","marginBottom","width","map","item","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Item from \"./Item\"\n\n class App extends React.Component {\n  constructor(){\n    super()\n    this.state={\n      items: [],\n      isLoading: false,\n      enableAutoRefresh: false,\n      minComments: 0,\n    };\n  }\n    componentDidMount() {\n     this.getItems()\n    }\n\n    getItems = () => {\n       this.setState({\n      isLoading: true \n      });\n      fetch(\"https://www.reddit.com/r/reactjs.json?limit=100\")\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          items: data.data.children,\n        isLoading: false\n        });\n        });\n    };\n\n    updateAutoRefresh= () => {\n      this.setState(\n        state => ({\n        enableAutoRefresh: !state.enableAutoRefresh\n      }),\n       () => {\n        if(this.state.enableAutoRefresh){\n          this.autoFresh = setInterval (this.getItems,3000);\n        } else {\n  clearInterval(this.autoRefresh);  \n   }    \n   }  \n   );\n};\n\nupdateMinComments = (event) =>\nthis.setState({\n  updateMinComments: event.targe\n})\n\n  render() {\n    const {items, isLoading, enableAutoRefresh} = this.state;\n    const itemsSortByComments = items.sort((a,b) => b.data.num_comments-a.data.num_comments);\n    return (\n    <div>\n      <h1>Top commented</h1>\n<div>\n      <button type=\"button\" stile ={{marginBottom: \"15px\"}}\n      onClick={this.updateAutoRefresh}>\n      {enableAutoRefresh ? \"Stop\" : \"Start\"} auto-refresh\n        </button>\n</div>\n\n    \n        <input type=\"range\" \n       value={minComments}\n       onChange={this.updateMinComments}\n         min={0}\n         max={500}\n         style={{width: \"100%\"}}/>\n      {isLoading ? (<p>...Loading</p>) : (\n        items.map(item => <Item key = {item.data.id} data={item.data}/>)\n    )}\n    </div>\n    );\n    }\n  }\n\n  export default App;"]},"metadata":{},"sourceType":"module"}